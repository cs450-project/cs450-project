name: Continuous Integration Workflow
on: [push, pull_request]

jobs:
  build_and_test_frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm install
      - name: Lint
        run: npm run lint
      - name: Build
        run: npm run build
      - name: Test
        run: npm run test:unit

  verify_migrations:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./db
    services:
      mysql:
        image: mysql:8.0.23
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
          MYSQL_ROOT_HOST: "%"
    steps:
      - uses: actions/checkout@v2
      - name: Verify MySql connection
        env:
          PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
            sleep 1
          done
      - name: Push ssh key into temp file
        run: |
          echo "${{ secrets.DEPLOY_KEY }}" > sshkey
          chmod 600 sshkey
      - name: Run migration on server
        run: ./scripts/sql_run.sh localhost root ${{ secrets.DB_PASSWORD }} ${{ secrets.DB_NAME }}

  test_backend:
    runs-on: ubuntu-latest
    needs: verify_migrations
    defaults:
      run:
        working-directory: ./api
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build the docker-compose stack
        run: docker-compose up -d --build
      - name: Sleep for 30 seconds
        uses: kibertoad/wait-action@1.0.1
        with:
          time: '30s'
      - name: Check running containers
        run: docker ps
      - name: Run test suite
        run: npm run test:docker

  migrate_staging:
    runs-on: ubuntu-latest
    needs: test_backend
    if: ${{ github.ref == 'refs/heads/heroku' && github.event_name == 'push' }}
    defaults:
      run:
        working-directory: ./db
    steps:
      - uses: actions/checkout@v2
      - name: Migrate Prod Database
        run: |
          ./scripts/sql_run.sh ${{ secrets.DB_HOST}} ${{ secrets.DB_USER }} ${{ secrets.DB_PASSWORD }} ${{ secrets.DB_NAME }}
